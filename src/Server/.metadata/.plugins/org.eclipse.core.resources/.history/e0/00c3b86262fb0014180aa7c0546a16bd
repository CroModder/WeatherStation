package sockets;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;
import java.net.InetAddress;
import java.net.ServerSocket;
import java.net.Socket;
import java.util.Random;
import java.util.Timer;
import java.util.TimerTask;

import org.json.JSONObject;

public class Server {

	public static void start() throws IOException {
		ServerSocket serverSocket= new ServerSocket(6040);
		serverSocket.getInetAddress();
		System.out.println("Server started at: " + InetAddress.getLocalHost() + " on port: " + serverSocket.getLocalPort());

		try {
			while (!Thread.interrupted()) {
				final Socket socket= serverSocket.accept();
				startHandler(socket);
			}
		} finally {
			serverSocket.close();
		}
	}

	private static void startHandler(final Socket socket) {
		Thread handler= new Thread() {
			public boolean verified = false;
			public void run() {
				System.out.println("prvi put");
				
				int interval = 5000;
			    int delay = 500;
			    Timer timer = new Timer();
			    

			    	timer.scheduleAtFixedRate(new TimerTask() {
				        public void run() {
				        	
				        	
				        }
				    }, interval, delay);
			    	
			    
			    
			}

			private void closeSocket() {
				try {
					socket.close();
				} catch (IOException ex) {

				}
			}
		};
		handler.start();
		System.out.println("Thread ID: " + handler.getId() + " ,Thread Name: " + handler.getName());
	}
}
